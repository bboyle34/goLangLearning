I210204 21:16:14.085633 1 util/log/sync_buffer.go:196 ⋮ [config] file created at: 2021/02/04 21:16:14
I210204 21:16:14.085640 1 util/log/sync_buffer.go:196 ⋮ [config] running on machine: ‹MM271521-PC›
I210204 21:16:14.085646 1 util/log/sync_buffer.go:196 ⋮ [config] binary: CockroachDB CCL v20.2.4 (x86_64-unknown-linux-gnu, built 2021/01/21 00:08:24, go1.13.14)
I210204 21:16:14.085649 1 util/log/sync_buffer.go:196 ⋮ [config] arguments: ‹[cockroach start --insecure --listen-addr=localhost --join=localhost:26257,locahost:26258,localhost:26259]›
I210204 21:16:14.085658 1 util/log/sync_buffer.go:196 ⋮ [config] line format: [IWEF]yymmdd hh:mm:ss.uuuuuu goid file:line msg utf8=✓
W210204 21:16:14.085106 1 cli/start.go:1137 ⋮ ALL SECURITY CONTROLS HAVE BEEN DISABLED!

This mode is intended for non-production testing only.

In this mode:
- Your cluster is open to any client that can access ‹localhost›.
- Intruders with access to your machine or network can observe client-server traffic.
- Intruders can log in without password and read or write any data in the cluster.
- Intruders can consume all your server's resources and cause unavailability.
I210204 21:16:14.086969 1 cli/start.go:1147 ⋮ To start a secure server without mandating TLS for clients,
consider --accept-sql-without-tls instead. For other options, see:

- ‹https://go.crdb.dev/issue-v/53404/v20.2›
- https://www.cockroachlabs.com/docs/v20.2/secure-a-cluster.html
I210204 21:16:14.087086 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (0 B) is unsupported, using system memory 32 GiB instead: no cgroup memory controller detected›
W210204 21:16:14.087109 1 cli/start.go:981 ⋮ ‹Using the default setting for --cache (128 MiB).›
‹  A significantly larger value is usually needed for good performance.›
‹  If you have a dedicated server a reasonable setting is --cache=.25 (7.9 GiB).›
I210204 21:16:14.087189 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (0 B) is unsupported, using system memory 32 GiB instead: no cgroup memory controller detected›
I210204 21:16:14.087197 1 cli/start.go:1162 ⋮ ‹CockroachDB CCL v20.2.4 (x86_64-unknown-linux-gnu, built 2021/01/21 00:08:24, go1.13.14)›
I210204 21:16:14.088827 1 server/status/recorder.go:605 ⋮ ‹available memory from cgroups (0 B) is unsupported, using system memory 32 GiB instead: no cgroup memory controller detected›
I210204 21:16:14.088838 1 server/config.go:428 ⋮ system total memory: ‹32 GiB›
I210204 21:16:14.088847 1 server/config.go:430 ⋮ server configuration:
‹max offset             500000000›
‹cache size             128 MiB›
‹SQL memory pool size   7.9 GiB›
‹scan interval          10m0s›
‹scan min idle time     10ms›
‹scan max idle time     1s›
‹event log enabled      true›
I210204 21:16:14.088882 1 cli/start.go:966 ⋮ process identity: ‹uid 1000 euid 1000 gid 1000 egid 1000›
I210204 21:16:14.092389 1 cli/start.go:505 ⋮ GEOS loaded from directory ‹/usr/local/lib/cockroach›
I210204 21:16:14.092410 1 cli/start.go:510 ⋮ starting cockroach node
E210204 21:16:14.093302 44 server/status/runtime.go:328 ⋮ [n?] could not get initial disk IO counters: open ‹/proc/diskstats›: no such file or directory
I210204 21:16:14.110763 44 server/server.go:790 ⋮ [n?] monitoring forward clock jumps based on server.clock.forward_jump_check_enabled
I210204 21:16:14.174841 44 server/config.go:619 ⋮ [n?] 1 storage engine‹› initialized
I210204 21:16:14.174861 44 server/config.go:622 ⋮ [n?] ‹Pebble cache size: 128 MiB›
I210204 21:16:14.174868 44 server/config.go:622 ⋮ [n?] ‹store 0: RocksDB, max size 0 B, max open file limit 10000›
I210204 21:16:14.181130 30 server/server.go:1424 ⋮ [n?] connecting to gossip network to verify cluster ID ‹"3aa307d8-55bd-4735-8399-6d805969bce5"›
W210204 21:16:14.181996 44 gossip/gossip.go:1494 ⋮ [n?] no incoming or outgoing connections
I210204 21:16:14.182026 44 gossip/gossip.go:403 ⋮ [n1] NodeDescriptor set to ‹node_id:1 address:<network_field:"tcp" address_field:"localhost:26257" > attrs:<> locality:<> ServerVersion:<major_val:20 minor_val:2 patch:0 unstable:0 > build_tag:"v20.2.4" started_at:1612473374182020400 cluster_name:"" sql_address:<network_field:"tcp" address_field:"localhost:26257" >›
W210204 21:16:14.279747 32 gossip/gossip.go:1277 ⋮ [n1] invalid bootstrap address: ‹&{typ:tcp addr:locahost:26258}›, ‹lookup locahost on 10.20.200.53:53: no such host›
W210204 21:16:14.280498 243 vendor/google.golang.org/grpc/internal/channelz/logging.go:73 ⋮ ‹grpc: addrConn.createTransport failed to connect to {localhost:26259  <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp 127.0.0.1:26259: connect: connection refused". Reconnecting...›
I210204 21:16:14.280574 227 vendor/github.com/cockroachdb/circuitbreaker/circuitbreaker.go:322 ⋮ [n1] circuitbreaker: ‹gossip 127.0.0.1:26257->localhost:26259› tripped: ‹initial connection heartbeat failed›: ‹rpc error: code = Unavailable desc = connection error: desc = "transport: Error while dialing dial tcp 127.0.0.1:26259: connect: connection refused"›
I210204 21:16:14.280651 227 vendor/github.com/cockroachdb/circuitbreaker/circuitbreaker.go:447 ⋮ [n1] circuitbreaker: ‹gossip 127.0.0.1:26257->localhost:26259› event: ‹BreakerTripped›
W210204 21:16:14.280663 227 gossip/client.go:118 ⋮ [n1] failed to start gossip client to ‹localhost:26259›: ‹initial connection heartbeat failed›: ‹rpc error: code = Unavailable desc = connection error: desc = "transport: Error while dialing dial tcp 127.0.0.1:26259: connect: connection refused"›
W210204 21:16:14.285240 352 kv/kvserver/replica_range_lease.go:556 ⋮ [n1,s1,r6/1:‹/Table/{SystemCon…-11}›] can't determine lease status of (n1,s1):1 due to node liveness error: node not in the liveness table
(1) attached stack trace
  -- stack trace:
  | github.com/cockroachdb/cockroach/pkg/kv/kvserver.init
  | 	/go/src/github.com/cockroachdb/cockroach/pkg/kv/kvserver/node_liveness.go:45
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5228
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.doInit
  | 	/usr/local/go/src/runtime/proc.go:5223
  | runtime.main
  | 	/usr/local/go/src/runtime/proc.go:190
  | runtime.goexit
  | 	/usr/local/go/src/runtime/asm_amd64.s:1357
Wraps: (2) node not in the liveness table
Error types: (1) *withstack.withStack (2) *errutil.leafError
I210204 21:16:14.285346 30 server/server.go:1427 ⋮ [n1] node connected via gossip
W210204 21:16:14.285409 352 kv/kvserver/store.go:1704 ⋮ [n1,s1,r6/1:‹/Table/{SystemCon…-11}›] could not gossip system config: ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
(1) ‹[NotLeaseHolderError] r6: replica (n1,s1):1 not lease holder; lease holder unknown›
Error types: (1) *roachpb.NotLeaseHolderError
I210204 21:16:14.287939 44 server/node.go:430 ⋮ [n1] initialized store [n1,s1]: disk (capacity=472 GiB, available=392 GiB, used=7.6 MiB, logicalBytes=43 MiB), ranges=37, leases=2, queries=0.00, writes=0.00, bytesPerReplica={p10=0.00 p25=0.00 p50=146.00 p75=9562.00 p90=32464.00 pMax=44707686.00}, writesPerReplica={p10=0.00 p25=0.00 p50=0.00 p75=0.00 p90=0.00 pMax=0.00}
I210204 21:16:14.288018 44 kv/kvserver/stores.go:236 ⋮ [n1] read 0 node addresses from persistent storage
I210204 21:16:14.288721 44 server/node.go:489 ⋮ [n1] started with engine type ‹2›
I210204 21:16:14.288744 44 server/node.go:491 ⋮ [n1] started with attributes ‹[]›
I210204 21:16:14.288798 44 server/goroutinedumper/goroutinedumper.go:120 ⋮ [n1] writing goroutine dumps to ‹/home/bboyle/github/goLangLearning/cockroachDB/cockroach-data/logs/goroutine_dump›
I210204 21:16:14.288829 44 server/heapprofiler/heapprofiler.go:49 ⋮ [n1] writing go heap profiles to ‹/home/bboyle/github/goLangLearning/cockroachDB/cockroach-data/logs/heap_profiler› at least every 1h0m0s
I210204 21:16:14.288845 44 server/heapprofiler/cgoprofiler.go:53 ⋮ [n1] to enable jmalloc profiling: "export MALLOC_CONF=prof:true" or "ln -s prof:true /etc/malloc.conf"
I210204 21:16:14.288853 44 server/heapprofiler/statsprofiler.go:54 ⋮ [n1] writing memory stats to ‹/home/bboyle/github/goLangLearning/cockroachDB/cockroach-data/logs/heap_profiler› at last every 1h0m0s
I210204 21:16:14.288864 44 server/server.go:1544 ⋮ [n1] starting http server at ‹127.0.0.1:8080› (use: ‹localhost:8080›)
I210204 21:16:14.288881 44 server/server.go:1551 ⋮ [n1] starting grpc/postgres server at ‹127.0.0.1:26257›
I210204 21:16:14.288893 44 server/server.go:1552 ⋮ [n1] advertising CockroachDB node at ‹localhost:26257›
I210204 21:16:14.296454 44 sql/sqlliveness/slinstance/slinstance.go:252 ⋮ [n1] starting SQL liveness instance
I210204 21:16:14.296683 44 server/server_sql.go:792 ⋮ [n1] done ensuring all necessary migrations have run
I210204 21:16:14.296699 44 server/server.go:1884 ⋮ [n1] serving sql connections
I210204 21:16:14.296799 44 cli/start.go:671 ⋮ [config] clusterID: ‹3aa307d8-55bd-4735-8399-6d805969bce5›
I210204 21:16:14.296822 44 cli/start.go:681 ⋮ node startup completed:
CockroachDB node starting at 2021-02-04 21:16:14.2967462 +0000 UTC (took 0.2s)
build:               CCL v20.2.4 @ 2021/01/21 00:08:24 (go1.13.14)
webui:               ‹http://localhost:8080›
sql:                 ‹postgresql://root@localhost:26257?sslmode=disable›
RPC client flags:    ‹cockroach <client cmd> --host=localhost:26257 --insecure›
logs:                ‹/home/bboyle/github/goLangLearning/cockroachDB/cockroach-data/logs›
temp dir:            ‹/home/bboyle/github/goLangLearning/cockroachDB/cockroach-data/cockroach-temp932371304›
external I/O path:   ‹/home/bboyle/github/goLangLearning/cockroachDB/cockroach-data/extern›
store[0]:            ‹path=/home/bboyle/github/goLangLearning/cockroachDB/cockroach-data›
storage engine:      pebble
status:              restarted pre-existing node
clusterID:           ‹3aa307d8-55bd-4735-8399-6d805969bce5›
nodeID:              1
I210204 21:16:14.296960 428 jobs/job_scheduler.go:346 ⋮ [n1] waiting 2m0s before scheduled jobs daemon start
I210204 21:16:14.297323 254 sql/temporary_schema.go:510 ⋮ [n1] running temporary object cleanup background job
I210204 21:16:14.304538 254 sql/temporary_schema.go:545 ⋮ [n1] found 0 temporary schemas
I210204 21:16:14.304558 254 sql/temporary_schema.go:548 ⋮ [n1] early exiting temporary schema cleaner as no temporary schemas were found
I210204 21:16:14.304567 254 sql/temporary_schema.go:549 ⋮ [n1] completed temporary object cleanup job
I210204 21:16:14.304576 254 sql/temporary_schema.go:627 ⋮ [n1] temporary object cleaner next scheduled to run at 2021-02-04 21:46:14.2969822 +0000 UTC
I210204 21:16:14.306981 429 server/server_update.go:55 ⋮ [n1] no need to upgrade, cluster already at the newest version
I210204 21:16:14.309308 252 sql/sqlliveness/slstorage/slstorage.go:342 ⋮ [n1] inserted sqlliveness session ‹3dbf913f05e04a539cdc2900227fc14c›
I210204 21:16:14.309332 252 sql/sqlliveness/slinstance/slinstance.go:143 ⋮ [n1] created new SQL liveness session ‹3dbf913f05e04a539cdc2900227fc14c›
I210204 21:16:14.313500 250 sql/event_log.go:162 ⋮ [n1] Event: ‹"node_restart"›, target: 1, info: ‹{Descriptor:{NodeID:1 Address:localhost:26257 Attrs: Locality: ServerVersion:20.2 BuildTag:v20.2.4 StartedAt:1612473374182020400 LocalityAddress:[] ClusterName: SQLAddress:localhost:26257} ClusterID:3aa307d8-55bd-4735-8399-6d805969bce5 StartedAt:1612473374182020400 LastUp:1612473350883924500}›
W210204 21:16:15.281278 243 vendor/google.golang.org/grpc/internal/channelz/logging.go:73 ⋮ ‹grpc: addrConn.createTransport failed to connect to {localhost:26259  <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing cannot reuse client connection". Reconnecting...›
I210204 21:16:15.293840 33 gossip/gossip.go:1508 ⋮ [n1] node has connected to cluster via gossip
I210204 21:16:15.295518 33 kv/kvserver/stores.go:255 ⋮ [n1] wrote 0 node addresses to persistent storage
I210204 21:16:22.197908 1 cli/start.go:730 ⋮ received signal 'interrupt'
I210204 21:16:22.198605 1 cli/start.go:815 ⋮ initiating graceful shutdown of server
I210204 21:16:22.201861 552 server/drain.go:174 ⋮ [server drain process] drain remaining: 1
I210204 21:16:22.202496 552 server/drain.go:176 ⋮ [server drain process] drain details: liveness record: 1
I210204 21:16:22.407683 552 server/drain.go:174 ⋮ [server drain process] drain remaining: 0
I210204 21:16:22.408354 552 util/stop/stopper.go:563 ⋮ [server drain process] quiescing
W210204 21:16:22.408921 252 sql/sqlliveness/slinstance/slinstance.go:182 ⋮ [n1] exiting heartbeat loop
W210204 21:16:22.408941 423 jobs/registry.go:672 ⋮ canceling all adopted jobs due to stopper quiescing
I210204 21:16:22.416640 1 cli/start.go:867 ⋮ server drained and shutdown completed
E210204 21:16:22.417490 1 cli/error.go:398 ⋮ ‹ERROR: interrupted›
